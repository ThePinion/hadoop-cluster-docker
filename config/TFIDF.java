import java.io.IOException;
import java.util.StringTokenizer;
import java.util.HashSet;
import java.util.Set;
import java.util.Map;
import java.util.HashMap;
import java.text.DecimalFormat;

import org.apache.hadoop.conf.Configuration;
import org.apache.hadoop.fs.Path;
import org.apache.hadoop.io.IntWritable;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapreduce.Job;
import org.apache.hadoop.mapreduce.Mapper;
import org.apache.hadoop.mapreduce.Reducer;
import org.apache.hadoop.mapreduce.lib.input.FileInputFormat;
import org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;
import org.apache.hadoop.mapreduce.lib.input.FileSplit;

public class TFIDF {

  public static void main(String[] args) throws Exception {
    Path input = new Path(args[0]);
    Path termFrequency = new Path(args[1]);
    Path documentFrequency = new Path(args[2]);
    Path output = new Path(args[3]);

    termFrequency(input, termFrequency);
    long numDocuments = documentFrequency(termFrequency, documentFrequency);
    termFrequencyInverseDocumentFrequency(documentFrequency, output, numDocuments);
    System.exit(0);
  }

  public static enum Counters {
    DOCUMENTS,
  }

  public static void termFrequency(Path input, Path output) throws Exception {
    Job job = Job.getInstance(new Configuration(), "Term Frequency");
    job.setJarByClass(TFIDF.class);
    job.setMapperClass(TFMapper.class); // Replace with your TFMapper class
    job.setCombinerClass(TFReducer.class); // Replace with your TFReducer class
    job.setReducerClass(TFReducer.class); // Replace with your TFReducer class
    job.setOutputKeyClass(Text.class);
    job.setOutputValueClass(IntWritable.class);
    FileInputFormat.addInputPath(job, input);
    FileOutputFormat.setOutputPath(job, output);
    
    if (!job.waitForCompletion(true)) {
      System.exit(1);
    }
  }

  // DocumentId, [words] => (word#documentId, 1)
  public static class TFMapper extends Mapper<Object, Text, Text, IntWritable> {
    private final static IntWritable one = new IntWritable(1);
    private Text word = new Text();
    private String filename;

    @Override
    protected void setup(Context context) throws IOException, InterruptedException {
      // Extracting filename from the input split
      FileSplit fileSplit = (FileSplit) context.getInputSplit();
      filename = fileSplit.getPath().getName();
    }

    public void map(
      Object key, Text value, Context context
    ) throws IOException, InterruptedException {
      StringTokenizer itr = new StringTokenizer(value.toString());
      while (itr.hasMoreTokens()) {
        String w = itr.nextToken();
        if (
          stopwords.contains(w) || 
          !w.matches("^[a-zA-Z]+$")
        ) { continue; }
        word.set(w.toLowerCase() + "#" + filename); // Composite key (word#filename)
        context.write(word, one);
      }
    }
  }

  // (word#documentId, 1) => (word#documentId, count)
  public static class TFReducer extends Reducer<Text, IntWritable, Text, IntWritable> {
    private IntWritable result = new IntWritable();

    public void reduce(
      Text key, Iterable<IntWritable> values, Context context
    ) throws IOException, InterruptedException {
      int sum = 0;
      for (IntWritable val : values) {
        sum += val.get();
      }
      result.set(sum);
      context.write(key, result);
    }
  }

  public static long documentFrequency(Path input, Path output) throws Exception {
    Job job = Job.getInstance(new Configuration(), "Document Frequency");
    job.setJarByClass(TFIDF.class);
    job.setMapperClass(DFMapper.class); // Replace with your DFMapper class
    job.setReducerClass(DFReducer.class); // Replace with your DFReducer class
    job.setOutputKeyClass(Text.class);
    job.setOutputValueClass(Text.class);
    FileInputFormat.addInputPath(job, input); // Input from Stage 1
    FileOutputFormat.setOutputPath(job, output); // Intermediate output

    if (!job.waitForCompletion(true)) {
      System.exit(1);
    }
    long numDocuments = job.getCounters().findCounter(TFIDF.Counters.DOCUMENTS).getValue();
    return numDocuments;
  }

  // (word#documentId, count) => (documentId, word=count)
  public static class DFMapper extends Mapper<Object, Text, Text, Text> {

    private Text docId = new Text();
    private Text wordAndCount = new Text();

    public void map(Object key, Text value, Context context) throws IOException, InterruptedException {
        String[] idAndCounter = value.toString().split("\t");
        String[] wordAndDoc = idAndCounter[0].split("#");
        String d = wordAndDoc[1];
        String w = wordAndDoc[0];
        String c = idAndCounter[1];
        docId.set(d);
        wordAndCount.set(w + "=" + c);
        context.write(docId, wordAndCount);
    }
  }

  // (documentId, word=count) => (word#documentId, count/documentSize)
  public static class DFReducer extends Reducer<Text, Text, Text, Text> {

    private Text wordAndDoc = new Text();
    private Text wordCountDivDocCount = new Text();

    public void reduce(Text key, Iterable<Text> values, Context context) throws IOException, InterruptedException {
      context.getCounter(TFIDF.Counters.DOCUMENTS).increment(1);
      int documentSize = 0;
      Map<String, Integer> counts = new HashMap<String, Integer>();
      for (Text val : values) {
        String[] wordAndCount = val.toString().split("=");
        String w = wordAndCount[0];
        int c = Integer.parseInt(wordAndCount[1]);  
        counts.put(w, c);
        documentSize += c;
      }
      for (String word : counts.keySet()) {
        wordAndDoc.set(word + "#" + key.toString());
        wordCountDivDocCount.set(counts.get(word) + "/" + documentSize);
        context.write(wordAndDoc, wordCountDivDocCount);
      }
    }
  }

  public static void termFrequencyInverseDocumentFrequency(
    Path input, Path output, long numDocuments
  ) throws Exception {
    Job job = Job.getInstance(
      new Configuration(), 
      "Term Frequency Inverse Document Frequency"
    );
    job.getConfiguration().setLong("custom.numDocuments", numDocuments);
    job.setJarByClass(TFIDF.class);
    job.setMapperClass(TFIDFMapper.class); // Replace with your TFIDFMapper class
    job.setReducerClass(TFIDFReducer.class); // Replace with your TFIDFReducer class
    job.setOutputKeyClass(Text.class);
    job.setOutputValueClass(Text.class);
    FileInputFormat.addInputPath(job, input); // Input from Stage 2
    FileOutputFormat.setOutputPath(job, output); // Final output

    if (!job.waitForCompletion(true)) {
      System.exit(1);
    }
  } 

  // (word#documentId, count/documentSize) => (word, documentId=count/documentSize)
  public static class TFIDFMapper extends Mapper<Object, Text, Text, Text> {

    private Text word = new Text();
    private Text tfidf = new Text();

    public void map(Object key, Text value, Context context) throws IOException, InterruptedException {
      String[] idAndCounter = value.toString().split("\t");
      String[] wordAndDoc = idAndCounter[0].split("#");
      String w = wordAndDoc[0];
      String d = wordAndDoc[1];
      String c = idAndCounter[1];
      word.set(w);
      tfidf.set(d + "=" + c);
      context.write(word, tfidf);
    }
  }

  // (word, [documentId=count/documentSize]) => (word#documentId, [tfidf's])
  public static class TFIDFReducer extends Reducer<Text, Text, Text, Text> {
    private Text wordAndDoc = new Text();
    private Text counts = new Text();
    private static final DecimalFormat FORMAT = new DecimalFormat("###.########");
    private long numDocuments;

    @Override
    protected void setup(Context context) throws IOException, InterruptedException {
        Configuration conf = context.getConfiguration();
        // Retrieve numDocuments from configuration with a default value of 0
        numDocuments = conf.getLong("custom.numDocuments", 0);
    }

    public void reduce(Text key, Iterable<Text> values, Context context) throws IOException, InterruptedException {
      long numDocumentsWithKey = 0;
      // Map<documentId, "count/documentSize">
      Map<String, String> frequencies = new HashMap<String, String>();
      for(Text val: values) {
        String[] docAndCount = val.toString().split("=");
        String d = docAndCount[0];
        String cAndct = docAndCount[1];
        Integer c = Integer.parseInt(cAndct.split("/")[0]);
        if (c > 0) { numDocumentsWithKey++; }
        frequencies.put(d, cAndct);
      }
      for (Map.Entry<String, String> entry : frequencies.entrySet()) {
        String doc = entry.getKey();
        String value = entry.getValue();
        String[] cAndct = value.split("/");
        Integer c = Integer.parseInt(cAndct[0]);
        Integer ct = Integer.parseInt(cAndct[1]);
        Double tf = (double) c / (double) ct;
        Double docsWithKeyNormalized = (double)(numDocumentsWithKey == (long)0 ? (long)1 : numDocumentsWithKey);
        Double idf = Math.log10((double) numDocuments / docsWithKeyNormalized );
        Double tfidf = tf * idf;
        wordAndDoc.set(key + "#" + doc);
        counts.set("[" 
          + numDocumentsWithKey + "/" + numDocuments + ", " 
          + value + ", " 
          + FORMAT.format(tfidf)
        + "]");
        context.write(wordAndDoc, counts);
      }
    }
  }

  private static HashSet<String> stopwords = new HashSet<>();
  static {    
    stopwords.add("'ll");
    stopwords.add("'tis");
    stopwords.add("'twas");
    stopwords.add("'ve");
    stopwords.add("10");
    stopwords.add("39");
    stopwords.add("a");
    stopwords.add("a's");
    stopwords.add("able");
    stopwords.add("ableabout");
    stopwords.add("about");
    stopwords.add("above");
    stopwords.add("abroad");
    stopwords.add("abst");
    stopwords.add("accordance");
    stopwords.add("according");
    stopwords.add("accordingly");
    stopwords.add("across");
    stopwords.add("act");
    stopwords.add("actually");
    stopwords.add("ad");
    stopwords.add("added");
    stopwords.add("adj");
    stopwords.add("adopted");
    stopwords.add("ae");
    stopwords.add("af");
    stopwords.add("affected");
    stopwords.add("affecting");
    stopwords.add("affects");
    stopwords.add("after");
    stopwords.add("afterwards");
    stopwords.add("ag");
    stopwords.add("again");
    stopwords.add("against");
    stopwords.add("ago");
    stopwords.add("ah");
    stopwords.add("ahead");
    stopwords.add("ai");
    stopwords.add("ain't");
    stopwords.add("aint");
    stopwords.add("al");
    stopwords.add("all");
    stopwords.add("allow");
    stopwords.add("allows");
    stopwords.add("almost");
    stopwords.add("alone");
    stopwords.add("along");
    stopwords.add("alongside");
    stopwords.add("already");
    stopwords.add("also");
    stopwords.add("although");
    stopwords.add("always");
    stopwords.add("am");
    stopwords.add("amid");
    stopwords.add("amidst");
    stopwords.add("among");
    stopwords.add("amongst");
    stopwords.add("amoungst");
    stopwords.add("amount");
    stopwords.add("an");
    stopwords.add("and");
    stopwords.add("announce");
    stopwords.add("another");
    stopwords.add("any");
    stopwords.add("anybody");
    stopwords.add("anyhow");
    stopwords.add("anymore");
    stopwords.add("anyone");
    stopwords.add("anything");
    stopwords.add("anyway");
    stopwords.add("anyways");
    stopwords.add("anywhere");
    stopwords.add("ao");
    stopwords.add("apart");
    stopwords.add("apparently");
    stopwords.add("appear");
    stopwords.add("appreciate");
    stopwords.add("appropriate");
    stopwords.add("approximately");
    stopwords.add("aq");
    stopwords.add("ar");
    stopwords.add("are");
    stopwords.add("area");
    stopwords.add("areas");
    stopwords.add("aren");
    stopwords.add("aren't");
    stopwords.add("arent");
    stopwords.add("arise");
    stopwords.add("around");
    stopwords.add("arpa");
    stopwords.add("as");
    stopwords.add("aside");
    stopwords.add("ask");
    stopwords.add("asked");
    stopwords.add("asking");
    stopwords.add("asks");
    stopwords.add("associated");
    stopwords.add("at");
    stopwords.add("au");
    stopwords.add("auth");
    stopwords.add("available");
    stopwords.add("aw");
    stopwords.add("away");
    stopwords.add("awfully");
    stopwords.add("az");
    stopwords.add("b");
    stopwords.add("ba");
    stopwords.add("back");
    stopwords.add("backed");
    stopwords.add("backing");
    stopwords.add("backs");
    stopwords.add("backward");
    stopwords.add("backwards");
    stopwords.add("bb");
    stopwords.add("bd");
    stopwords.add("be");
    stopwords.add("became");
    stopwords.add("because");
    stopwords.add("become");
    stopwords.add("becomes");
    stopwords.add("becoming");
    stopwords.add("been");
    stopwords.add("before");
    stopwords.add("beforehand");
    stopwords.add("began");
    stopwords.add("begin");
    stopwords.add("beginning");
    stopwords.add("beginnings");
    stopwords.add("begins");
    stopwords.add("behind");
    stopwords.add("being");
    stopwords.add("beings");
    stopwords.add("believe");
    stopwords.add("below");
    stopwords.add("beside");
    stopwords.add("besides");
    stopwords.add("best");
    stopwords.add("better");
    stopwords.add("between");
    stopwords.add("beyond");
    stopwords.add("bf");
    stopwords.add("bg");
    stopwords.add("bh");
    stopwords.add("bi");
    stopwords.add("big");
    stopwords.add("bill");
    stopwords.add("billion");
    stopwords.add("biol");
    stopwords.add("bj");
    stopwords.add("bm");
    stopwords.add("bn");
    stopwords.add("bo");
    stopwords.add("both");
    stopwords.add("bottom");
    stopwords.add("br");
    stopwords.add("brief");
    stopwords.add("briefly");
    stopwords.add("bs");
    stopwords.add("bt");
    stopwords.add("but");
    stopwords.add("buy");
    stopwords.add("bv");
    stopwords.add("bw");
    stopwords.add("by");
    stopwords.add("bz");
    stopwords.add("c");
    stopwords.add("c'mon");
    stopwords.add("c's");
    stopwords.add("ca");
    stopwords.add("call");
    stopwords.add("came");
    stopwords.add("can");
    stopwords.add("can't");
    stopwords.add("cannot");
    stopwords.add("cant");
    stopwords.add("caption");
    stopwords.add("case");
    stopwords.add("cases");
    stopwords.add("cause");
    stopwords.add("causes");
    stopwords.add("cc");
    stopwords.add("cd");
    stopwords.add("certain");
    stopwords.add("certainly");
    stopwords.add("cf");
    stopwords.add("cg");
    stopwords.add("ch");
    stopwords.add("changes");
    stopwords.add("ci");
    stopwords.add("ck");
    stopwords.add("cl");
    stopwords.add("clear");
    stopwords.add("clearly");
    stopwords.add("click");
    stopwords.add("cm");
    stopwords.add("cmon");
    stopwords.add("cn");
    stopwords.add("co");
    stopwords.add("co.");
    stopwords.add("com");
    stopwords.add("come");
    stopwords.add("comes");
    stopwords.add("computer");
    stopwords.add("con");
    stopwords.add("concerning");
    stopwords.add("consequently");
    stopwords.add("consider");
    stopwords.add("considering");
    stopwords.add("contain");
    stopwords.add("containing");
    stopwords.add("contains");
    stopwords.add("copy");
    stopwords.add("corresponding");
    stopwords.add("could");
    stopwords.add("could've");
    stopwords.add("couldn");
    stopwords.add("couldn't");
    stopwords.add("couldnt");
    stopwords.add("course");
    stopwords.add("cr");
    stopwords.add("cry");
    stopwords.add("cs");
    stopwords.add("cu");
    stopwords.add("currently");
    stopwords.add("cv");
    stopwords.add("cx");
    stopwords.add("cy");
    stopwords.add("cz");
    stopwords.add("d");
    stopwords.add("dare");
    stopwords.add("daren't");
    stopwords.add("darent");
    stopwords.add("date");
    stopwords.add("de");
    stopwords.add("dear");
    stopwords.add("definitely");
    stopwords.add("describe");
    stopwords.add("described");
    stopwords.add("despite");
    stopwords.add("detail");
    stopwords.add("did");
    stopwords.add("didn");
    stopwords.add("didn't");
    stopwords.add("didnt");
    stopwords.add("differ");
    stopwords.add("different");
    stopwords.add("differently");
    stopwords.add("directly");
    stopwords.add("dj");
    stopwords.add("dk");
    stopwords.add("dm");
    stopwords.add("do");
    stopwords.add("does");
    stopwords.add("doesn");
    stopwords.add("doesn't");
    stopwords.add("doesnt");
    stopwords.add("doing");
    stopwords.add("don");
    stopwords.add("don't");
    stopwords.add("done");
    stopwords.add("dont");
    stopwords.add("doubtful");
    stopwords.add("down");
    stopwords.add("downed");
    stopwords.add("downing");
    stopwords.add("downs");
    stopwords.add("downwards");
    stopwords.add("due");
    stopwords.add("during");
    stopwords.add("dz");
    stopwords.add("e");
    stopwords.add("each");
    stopwords.add("early");
    stopwords.add("ec");
    stopwords.add("ed");
    stopwords.add("edu");
    stopwords.add("ee");
    stopwords.add("effect");
    stopwords.add("eg");
    stopwords.add("eh");
    stopwords.add("eight");
    stopwords.add("eighty");
    stopwords.add("either");
    stopwords.add("eleven");
    stopwords.add("else");
    stopwords.add("elsewhere");
    stopwords.add("empty");
    stopwords.add("end");
    stopwords.add("ended");
    stopwords.add("ending");
    stopwords.add("ends");
    stopwords.add("enough");
    stopwords.add("entirely");
    stopwords.add("er");
    stopwords.add("es");
    stopwords.add("especially");
    stopwords.add("et");
    stopwords.add("et-al");
    stopwords.add("etc");
    stopwords.add("even");
    stopwords.add("evenly");
    stopwords.add("ever");
    stopwords.add("evermore");
    stopwords.add("every");
    stopwords.add("everybody");
    stopwords.add("everyone");
    stopwords.add("everything");
    stopwords.add("everywhere");
    stopwords.add("ex");
    stopwords.add("exactly");
    stopwords.add("example");
    stopwords.add("except");
    stopwords.add("f");
    stopwords.add("face");
    stopwords.add("faces");
    stopwords.add("fact");
    stopwords.add("facts");
    stopwords.add("fairly");
    stopwords.add("far");
    stopwords.add("farther");
    stopwords.add("felt");
    stopwords.add("few");
    stopwords.add("fewer");
    stopwords.add("ff");
    stopwords.add("fi");
    stopwords.add("fifteen");
    stopwords.add("fifth");
    stopwords.add("fifty");
    stopwords.add("fify");
    stopwords.add("fill");
    stopwords.add("find");
    stopwords.add("finds");
    stopwords.add("fire");
    stopwords.add("first");
    stopwords.add("five");
    stopwords.add("fix");
    stopwords.add("fj");
    stopwords.add("fk");
    stopwords.add("fm");
    stopwords.add("fo");
    stopwords.add("followed");
    stopwords.add("following");
    stopwords.add("follows");
    stopwords.add("for");
    stopwords.add("forever");
    stopwords.add("former");
    stopwords.add("formerly");
    stopwords.add("forth");
    stopwords.add("forty");
    stopwords.add("forward");
    stopwords.add("found");
    stopwords.add("four");
    stopwords.add("fr");
    stopwords.add("free");
    stopwords.add("from");
    stopwords.add("front");
    stopwords.add("full");
    stopwords.add("fully");
    stopwords.add("further");
    stopwords.add("furthered");
    stopwords.add("furthering");
    stopwords.add("furthermore");
    stopwords.add("furthers");
    stopwords.add("fx");
    stopwords.add("g");
    stopwords.add("ga");
    stopwords.add("gave");
    stopwords.add("gb");
    stopwords.add("gd");
    stopwords.add("ge");
    stopwords.add("general");
    stopwords.add("generally");
    stopwords.add("get");
    stopwords.add("gets");
    stopwords.add("getting");
    stopwords.add("gf");
    stopwords.add("gg");
    stopwords.add("gh");
    stopwords.add("gi");
    stopwords.add("give");
    stopwords.add("given");
    stopwords.add("gives");
    stopwords.add("giving");
    stopwords.add("gl");
    stopwords.add("gm");
    stopwords.add("gmt");
    stopwords.add("gn");
    stopwords.add("go");
    stopwords.add("goes");
    stopwords.add("going");
    stopwords.add("gone");
    stopwords.add("good");
    stopwords.add("goods");
    stopwords.add("got");
    stopwords.add("gotten");
    stopwords.add("gov");
    stopwords.add("gp");
    stopwords.add("gq");
    stopwords.add("gr");
    stopwords.add("great");
    stopwords.add("greater");
    stopwords.add("greatest");
    stopwords.add("greetings");
    stopwords.add("group");
    stopwords.add("grouped");
    stopwords.add("grouping");
    stopwords.add("groups");
    stopwords.add("gs");
    stopwords.add("gt");
    stopwords.add("gu");
    stopwords.add("gw");
    stopwords.add("gy");
    stopwords.add("h");
    stopwords.add("had");
    stopwords.add("hadn't");
    stopwords.add("hadnt");
    stopwords.add("half");
    stopwords.add("happens");
    stopwords.add("hardly");
    stopwords.add("has");
    stopwords.add("hasn");
    stopwords.add("hasn't");
    stopwords.add("hasnt");
    stopwords.add("have");
    stopwords.add("haven");
    stopwords.add("haven't");
    stopwords.add("havent");
    stopwords.add("having");
    stopwords.add("he");
    stopwords.add("he'd");
    stopwords.add("he'll");
    stopwords.add("he's");
    stopwords.add("hed");
    stopwords.add("hell");
    stopwords.add("hello");
    stopwords.add("help");
    stopwords.add("hence");
    stopwords.add("her");
    stopwords.add("here");
    stopwords.add("here's");
    stopwords.add("hereafter");
    stopwords.add("hereby");
    stopwords.add("herein");
    stopwords.add("heres");
    stopwords.add("hereupon");
    stopwords.add("hers");
    stopwords.add("herself");
    stopwords.add("herse");
    stopwords.add("hes");
    stopwords.add("hi");
    stopwords.add("hid");
    stopwords.add("high");
    stopwords.add("higher");
    stopwords.add("highest");
    stopwords.add("him");
    stopwords.add("himself");
    stopwords.add("himse");
    stopwords.add("his");
    stopwords.add("hither");
    stopwords.add("hk");
    stopwords.add("hm");
    stopwords.add("hn");
    stopwords.add("home");
    stopwords.add("homepage");
    stopwords.add("hopefully");
    stopwords.add("how");
    stopwords.add("how'd");
    stopwords.add("how'll");
    stopwords.add("how's");
    stopwords.add("howbeit");
    stopwords.add("however");
    stopwords.add("hr");
    stopwords.add("ht");
    stopwords.add("htm");
    stopwords.add("html");
    stopwords.add("http");
    stopwords.add("hu");
    stopwords.add("hundred");
    stopwords.add("i");
    stopwords.add("i'd");
    stopwords.add("i'll");
    stopwords.add("i'm");
    stopwords.add("i've");
    stopwords.add("i.e.");
    stopwords.add("id");
    stopwords.add("ie");
    stopwords.add("if");
    stopwords.add("ignored");
    stopwords.add("ii");
    stopwords.add("il");
    stopwords.add("ill");
    stopwords.add("im");
    stopwords.add("immediate");
    stopwords.add("immediately");
    stopwords.add("importance");
    stopwords.add("important");
    stopwords.add("in");
    stopwords.add("inasmuch");
    stopwords.add("inc");
    stopwords.add("inc.");
    stopwords.add("indeed");
    stopwords.add("index");
    stopwords.add("indicate");
    stopwords.add("indicated");
    stopwords.add("indicates");
    stopwords.add("information");
    stopwords.add("inner");
    stopwords.add("inside");
    stopwords.add("insofar");
    stopwords.add("instead");
    stopwords.add("int");
    stopwords.add("interest");
    stopwords.add("interested");
    stopwords.add("interesting");
    stopwords.add("interests");
    stopwords.add("into");
    stopwords.add("invention");
    stopwords.add("inward");
    stopwords.add("io");
    stopwords.add("iq");
    stopwords.add("ir");
    stopwords.add("is");
    stopwords.add("isn");
    stopwords.add("isn't");
    stopwords.add("isnt");
    stopwords.add("it");
    stopwords.add("it'd");
    stopwords.add("it'll");
    stopwords.add("it's");
    stopwords.add("itd");
    stopwords.add("itll");
    stopwords.add("its");
    stopwords.add("itself");
    stopwords.add("itse");
    stopwords.add("ive");
    stopwords.add("j");
    stopwords.add("je");
    stopwords.add("jm");
    stopwords.add("jo");
    stopwords.add("join");
    stopwords.add("jp");
    stopwords.add("just");
    stopwords.add("k");
    stopwords.add("ke");
    stopwords.add("keep");
    stopwords.add("keeps");
    stopwords.add("kept");
    stopwords.add("keys");
    stopwords.add("kg");
    stopwords.add("kh");
    stopwords.add("ki");
    stopwords.add("kind");
    stopwords.add("km");
    stopwords.add("kn");
    stopwords.add("knew");
    stopwords.add("know");
    stopwords.add("known");
    stopwords.add("knows");
    stopwords.add("kp");
    stopwords.add("kr");
    stopwords.add("kw");
    stopwords.add("ky");
    stopwords.add("kz");
    stopwords.add("l");
    stopwords.add("la");
    stopwords.add("large");
    stopwords.add("largely");
    stopwords.add("last");
    stopwords.add("lately");
    stopwords.add("later");
    stopwords.add("latest");
    stopwords.add("latter");
    stopwords.add("latterly");
    stopwords.add("lb");
    stopwords.add("lc");
    stopwords.add("least");
    stopwords.add("length");
    stopwords.add("less");
    stopwords.add("lest");
    stopwords.add("let");
    stopwords.add("let's");
    stopwords.add("lets");
    stopwords.add("li");
    stopwords.add("like");
    stopwords.add("liked");
    stopwords.add("likely");
    stopwords.add("likewise");
    stopwords.add("line");
    stopwords.add("little");
    stopwords.add("lk");
    stopwords.add("ll");
    stopwords.add("long");
    stopwords.add("longer");
    stopwords.add("longest");
    stopwords.add("look");
    stopwords.add("looking");
    stopwords.add("looks");
    stopwords.add("low");
    stopwords.add("lower");
    stopwords.add("lr");
    stopwords.add("ls");
    stopwords.add("lt");
    stopwords.add("ltd");
    stopwords.add("lu");
    stopwords.add("lv");
    stopwords.add("ly");
    stopwords.add("m");
    stopwords.add("ma");
    stopwords.add("made");
    stopwords.add("mainly");
    stopwords.add("make");
    stopwords.add("makes");
    stopwords.add("making");
    stopwords.add("man");
    stopwords.add("many");
    stopwords.add("may");
    stopwords.add("maybe");
    stopwords.add("mayn't");
    stopwords.add("maynt");
    stopwords.add("mc");
    stopwords.add("md");
    stopwords.add("me");
    stopwords.add("mean");
    stopwords.add("means");
    stopwords.add("meantime");
    stopwords.add("meanwhile");
    stopwords.add("member");
    stopwords.add("members");
    stopwords.add("men");
    stopwords.add("merely");
    stopwords.add("mg");
    stopwords.add("mh");
    stopwords.add("microsoft");
    stopwords.add("might");
    stopwords.add("might've");
    stopwords.add("mightn't");
    stopwords.add("mightnt");
    stopwords.add("mil");
    stopwords.add("mill");
    stopwords.add("million");
    stopwords.add("mine");
    stopwords.add("minus");
    stopwords.add("miss");
    stopwords.add("mk");
    stopwords.add("ml");
    stopwords.add("mm");
    stopwords.add("mn");
    stopwords.add("mo");
    stopwords.add("more");
    stopwords.add("moreover");
    stopwords.add("most");
    stopwords.add("mostly");
    stopwords.add("move");
    stopwords.add("mp");
    stopwords.add("mq");
    stopwords.add("mr");
    stopwords.add("mrs");
    stopwords.add("ms");
    stopwords.add("msie");
    stopwords.add("mt");
    stopwords.add("mu");
    stopwords.add("much");
    stopwords.add("mug");
    stopwords.add("must");
    stopwords.add("must've");
    stopwords.add("mustn't");
    stopwords.add("mustnt");
    stopwords.add("mv");
    stopwords.add("mw");
    stopwords.add("mx");
    stopwords.add("my");
    stopwords.add("myself");
    stopwords.add("myse");
    stopwords.add("mz");
    stopwords.add("n");
    stopwords.add("na");
    stopwords.add("name");
    stopwords.add("namely");
    stopwords.add("nay");
    stopwords.add("nc");
    stopwords.add("nd");
    stopwords.add("ne");
    stopwords.add("near");
    stopwords.add("nearly");
    stopwords.add("necessarily");
    stopwords.add("necessary");
    stopwords.add("need");
    stopwords.add("needed");
    stopwords.add("needing");
    stopwords.add("needn't");
    stopwords.add("neednt");
    stopwords.add("needs");
    stopwords.add("neither");
    stopwords.add("net");
    stopwords.add("netscape");
    stopwords.add("never");
    stopwords.add("neverf");
    stopwords.add("neverless");
    stopwords.add("nevertheless");
    stopwords.add("new");
    stopwords.add("newer");
    stopwords.add("newest");
    stopwords.add("next");
    stopwords.add("nf");
    stopwords.add("ng");
    stopwords.add("ni");
    stopwords.add("nine");
    stopwords.add("ninety");
    stopwords.add("nl");
    stopwords.add("no");
    stopwords.add("no-one");
    stopwords.add("nobody");
    stopwords.add("non");
    stopwords.add("none");
    stopwords.add("nonetheless");
    stopwords.add("noone");
    stopwords.add("nor");
    stopwords.add("normally");
    stopwords.add("nos");
    stopwords.add("not");
    stopwords.add("noted");
    stopwords.add("nothing");
    stopwords.add("notwithstanding");
    stopwords.add("novel");
    stopwords.add("now");
    stopwords.add("nowhere");
    stopwords.add("np");
    stopwords.add("nr");
    stopwords.add("nu");
    stopwords.add("null");
    stopwords.add("number");
    stopwords.add("numbers");
    stopwords.add("nz");
    stopwords.add("o");
    stopwords.add("obtain");
    stopwords.add("obtained");
    stopwords.add("obviously");
    stopwords.add("of");
    stopwords.add("off");
    stopwords.add("often");
    stopwords.add("oh");
    stopwords.add("ok");
    stopwords.add("okay");
    stopwords.add("old");
    stopwords.add("older");
    stopwords.add("oldest");
    stopwords.add("om");
    stopwords.add("omitted");
    stopwords.add("on");
    stopwords.add("once");
    stopwords.add("one");
    stopwords.add("one's");
    stopwords.add("ones");
    stopwords.add("only");
    stopwords.add("onto");
    stopwords.add("open");
    stopwords.add("opened");
    stopwords.add("opening");
    stopwords.add("opens");
    stopwords.add("opposite");
    stopwords.add("or");
    stopwords.add("ord");
    stopwords.add("order");
    stopwords.add("ordered");
    stopwords.add("ordering");
    stopwords.add("orders");
    stopwords.add("org");
    stopwords.add("other");
    stopwords.add("others");
    stopwords.add("otherwise");
    stopwords.add("ought");
    stopwords.add("oughtn't");
    stopwords.add("oughtnt");
    stopwords.add("our");
    stopwords.add("ours");
    stopwords.add("ourselves");
    stopwords.add("out");
    stopwords.add("outside");
    stopwords.add("over");
    stopwords.add("overall");
    stopwords.add("owing");
    stopwords.add("own");
    stopwords.add("p");
    stopwords.add("pa");
    stopwords.add("page");
    stopwords.add("pages");
    stopwords.add("part");
    stopwords.add("parted");
    stopwords.add("particular");
    stopwords.add("particularly");
    stopwords.add("parting");
    stopwords.add("parts");
    stopwords.add("past");
    stopwords.add("pe");
    stopwords.add("per");
    stopwords.add("perhaps");
    stopwords.add("pf");
    stopwords.add("pg");
    stopwords.add("ph");
    stopwords.add("pk");
    stopwords.add("pl");
    stopwords.add("place");
    stopwords.add("placed");
    stopwords.add("places");
    stopwords.add("please");
    stopwords.add("plus");
    stopwords.add("pm");
    stopwords.add("pmid");
    stopwords.add("pn");
    stopwords.add("point");
    stopwords.add("pointed");
    stopwords.add("pointing");
    stopwords.add("points");
    stopwords.add("poorly");
    stopwords.add("possible");
    stopwords.add("possibly");
    stopwords.add("potentially");
    stopwords.add("pp");
    stopwords.add("pr");
    stopwords.add("predominantly");
    stopwords.add("present");
    stopwords.add("presented");
    stopwords.add("presenting");
    stopwords.add("presents");
    stopwords.add("presumably");
    stopwords.add("previously");
    stopwords.add("primarily");
    stopwords.add("probably");
    stopwords.add("problem");
    stopwords.add("problems");
    stopwords.add("promptly");
    stopwords.add("proud");
    stopwords.add("provided");
    stopwords.add("provides");
    stopwords.add("pt");
    stopwords.add("put");
    stopwords.add("puts");
    stopwords.add("pw");
    stopwords.add("py");
    stopwords.add("q");
    stopwords.add("qa");
    stopwords.add("que");
    stopwords.add("quickly");
    stopwords.add("quite");
    stopwords.add("qv");
    stopwords.add("r");
    stopwords.add("ran");
    stopwords.add("rather");
    stopwords.add("rd");
    stopwords.add("re");
    stopwords.add("readily");
    stopwords.add("really");
    stopwords.add("reasonably");
    stopwords.add("recent");
    stopwords.add("recently");
    stopwords.add("ref");
    stopwords.add("refs");
    stopwords.add("regarding");
    stopwords.add("regardless");
    stopwords.add("regards");
    stopwords.add("related");
    stopwords.add("relatively");
    stopwords.add("research");
    stopwords.add("reserved");
    stopwords.add("respectively");
    stopwords.add("resulted");
    stopwords.add("resulting");
    stopwords.add("results");
    stopwords.add("right");
    stopwords.add("ring");
    stopwords.add("ro");
    stopwords.add("room");
    stopwords.add("rooms");
    stopwords.add("round");
    stopwords.add("ru");
    stopwords.add("run");
    stopwords.add("rw");
    stopwords.add("s");
    stopwords.add("sa");
    stopwords.add("said");
    stopwords.add("same");
    stopwords.add("saw");
    stopwords.add("say");
    stopwords.add("saying");
    stopwords.add("says");
    stopwords.add("sb");
    stopwords.add("sc");
    stopwords.add("sd");
    stopwords.add("se");
    stopwords.add("sec");
    stopwords.add("second");
    stopwords.add("secondly");
    stopwords.add("seconds");
    stopwords.add("section");
    stopwords.add("see");
    stopwords.add("seeing");
    stopwords.add("seem");
    stopwords.add("seemed");
    stopwords.add("seeming");
    stopwords.add("seems");
    stopwords.add("seen");
    stopwords.add("sees");
    stopwords.add("self");
    stopwords.add("selves");
    stopwords.add("sensible");
    stopwords.add("sent");
    stopwords.add("serious");
    stopwords.add("seriously");
    stopwords.add("seven");
    stopwords.add("seventy");
    stopwords.add("several");
    stopwords.add("sg");
    stopwords.add("sh");
    stopwords.add("shall");
    stopwords.add("shan't");
    stopwords.add("shant");
    stopwords.add("she");
    stopwords.add("she'd");
    stopwords.add("she'll");
    stopwords.add("she's");
    stopwords.add("shed");
    stopwords.add("shell");
    stopwords.add("shes");
    stopwords.add("should");
    stopwords.add("should've");
    stopwords.add("shouldn");
    stopwords.add("shouldn't");
    stopwords.add("shouldnt");
    stopwords.add("show");
    stopwords.add("showed");
    stopwords.add("showing");
    stopwords.add("shown");
    stopwords.add("showns");
    stopwords.add("shows");
    stopwords.add("si");
    stopwords.add("side");
    stopwords.add("sides");
    stopwords.add("significant");
    stopwords.add("significantly");
    stopwords.add("similar");
    stopwords.add("similarly");
    stopwords.add("since");
    stopwords.add("sincere");
    stopwords.add("site");
    stopwords.add("six");
    stopwords.add("sixty");
    stopwords.add("sj");
    stopwords.add("sk");
    stopwords.add("sl");
    stopwords.add("slightly");
    stopwords.add("sm");
    stopwords.add("small");
    stopwords.add("smaller");
    stopwords.add("smallest");
    stopwords.add("sn");
    stopwords.add("so");
    stopwords.add("some");
    stopwords.add("somebody");
    stopwords.add("someday");
    stopwords.add("somehow");
    stopwords.add("someone");
    stopwords.add("somethan");
    stopwords.add("something");
    stopwords.add("sometime");
    stopwords.add("sometimes");
    stopwords.add("somewhat");
    stopwords.add("somewhere");
    stopwords.add("soon");
    stopwords.add("sorry");
    stopwords.add("specifically");
    stopwords.add("specified");
    stopwords.add("specify");
    stopwords.add("specifying");
    stopwords.add("sr");
    stopwords.add("st");
    stopwords.add("state");
    stopwords.add("states");
    stopwords.add("still");
    stopwords.add("stop");
    stopwords.add("strongly");
    stopwords.add("su");
    stopwords.add("sub");
    stopwords.add("substantially");
    stopwords.add("successfully");
    stopwords.add("such");
    stopwords.add("sufficiently");
    stopwords.add("suggest");
    stopwords.add("sup");
    stopwords.add("sure");
    stopwords.add("sv");
    stopwords.add("sy");
    stopwords.add("system");
    stopwords.add("sz");
    stopwords.add("t");
    stopwords.add("t's");
    stopwords.add("take");
    stopwords.add("taken");
    stopwords.add("taking");
    stopwords.add("tc");
    stopwords.add("td");
    stopwords.add("tell");
    stopwords.add("ten");
    stopwords.add("tends");
    stopwords.add("test");
    stopwords.add("text");
    stopwords.add("tf");
    stopwords.add("tg");
    stopwords.add("th");
    stopwords.add("than");
    stopwords.add("thank");
    stopwords.add("thanks");
    stopwords.add("thanx");
    stopwords.add("that");
    stopwords.add("that'll");
    stopwords.add("that's");
    stopwords.add("that've");
    stopwords.add("thatll");
    stopwords.add("thats");
    stopwords.add("thatve");
    stopwords.add("the");
    stopwords.add("their");
    stopwords.add("theirs");
    stopwords.add("them");
    stopwords.add("themselves");
    stopwords.add("then");
    stopwords.add("thence");
    stopwords.add("there");
    stopwords.add("there'd");
    stopwords.add("there'll");
    stopwords.add("there're");
    stopwords.add("there's");
    stopwords.add("there've");
    stopwords.add("thereafter");
    stopwords.add("thereby");
    stopwords.add("thered");
    stopwords.add("therefore");
    stopwords.add("therein");
    stopwords.add("therell");
    stopwords.add("thereof");
    stopwords.add("therere");
    stopwords.add("theres");
    stopwords.add("thereto");
    stopwords.add("thereupon");
    stopwords.add("thereve");
    stopwords.add("these");
    stopwords.add("they");
    stopwords.add("they'd");
    stopwords.add("they'll");
    stopwords.add("they're");
    stopwords.add("they've");
    stopwords.add("theyd");
    stopwords.add("theyll");
    stopwords.add("theyre");
    stopwords.add("theyve");
    stopwords.add("thick");
    stopwords.add("thin");
    stopwords.add("thing");
    stopwords.add("things");
    stopwords.add("think");
    stopwords.add("thinks");
    stopwords.add("third");
    stopwords.add("thirty");
    stopwords.add("this");
    stopwords.add("thorough");
    stopwords.add("thoroughly");
    stopwords.add("those");
    stopwords.add("thou");
    stopwords.add("though");
    stopwords.add("thoughh");
    stopwords.add("thought");
    stopwords.add("thoughts");
    stopwords.add("thousand");
    stopwords.add("three");
    stopwords.add("throug");
    stopwords.add("through");
    stopwords.add("throughout");
    stopwords.add("thru");
    stopwords.add("thus");
    stopwords.add("til");
    stopwords.add("till");
    stopwords.add("tip");
    stopwords.add("tis");
    stopwords.add("tj");
    stopwords.add("tk");
    stopwords.add("tm");
    stopwords.add("tn");
    stopwords.add("to");
    stopwords.add("today");
    stopwords.add("together");
    stopwords.add("too");
    stopwords.add("took");
    stopwords.add("top");
    stopwords.add("toward");
    stopwords.add("towards");
    stopwords.add("tp");
    stopwords.add("tr");
    stopwords.add("tried");
    stopwords.add("tries");
    stopwords.add("trillion");
    stopwords.add("truly");
    stopwords.add("try");
    stopwords.add("trying");
    stopwords.add("ts");
    stopwords.add("tt");
    stopwords.add("turn");
    stopwords.add("turned");
    stopwords.add("turning");
    stopwords.add("turns");
    stopwords.add("tv");
    stopwords.add("tw");
    stopwords.add("twas");
    stopwords.add("twelve");
    stopwords.add("twenty");
    stopwords.add("twice");
    stopwords.add("two");
    stopwords.add("tz");
    stopwords.add("u");
    stopwords.add("ua");
    stopwords.add("ug");
    stopwords.add("uk");
    stopwords.add("um");
    stopwords.add("un");
    stopwords.add("under");
    stopwords.add("underneath");
    stopwords.add("undoing");
    stopwords.add("unfortunately");
    stopwords.add("unless");
    stopwords.add("unlike");
    stopwords.add("unlikely");
    stopwords.add("until");
    stopwords.add("unto");
    stopwords.add("up");
    stopwords.add("upon");
    stopwords.add("ups");
    stopwords.add("upwards");
    stopwords.add("us");
    stopwords.add("use");
    stopwords.add("used");
    stopwords.add("useful");
    stopwords.add("usefully");
    stopwords.add("usefulness");
    stopwords.add("uses");
    stopwords.add("using");
    stopwords.add("usually");
    stopwords.add("uucp");
    stopwords.add("uy");
    stopwords.add("uz");
    stopwords.add("v");
    stopwords.add("va");
    stopwords.add("value");
    stopwords.add("various");
    stopwords.add("vc");
    stopwords.add("ve");
    stopwords.add("versus");
    stopwords.add("very");
    stopwords.add("vg");
    stopwords.add("vi");
    stopwords.add("via");
    stopwords.add("viz");
    stopwords.add("vn");
    stopwords.add("vol");
    stopwords.add("vols");
    stopwords.add("vs");
    stopwords.add("vu");
    stopwords.add("w");
    stopwords.add("want");
    stopwords.add("wanted");
    stopwords.add("wanting");
    stopwords.add("wants");
    stopwords.add("was");
    stopwords.add("wasn");
    stopwords.add("wasn't");
    stopwords.add("wasnt");
    stopwords.add("way");
    stopwords.add("ways");
    stopwords.add("we");
    stopwords.add("we'd");
    stopwords.add("we'll");
    stopwords.add("we're");
    stopwords.add("we've");
    stopwords.add("web");
    stopwords.add("webpage");
    stopwords.add("website");
    stopwords.add("wed");
    stopwords.add("welcome");
    stopwords.add("well");
    stopwords.add("wells");
    stopwords.add("went");
    stopwords.add("were");
    stopwords.add("weren");
    stopwords.add("weren't");
    stopwords.add("werent");
    stopwords.add("weve");
    stopwords.add("wf");
    stopwords.add("what");
    stopwords.add("what'd");
    stopwords.add("what'll");
    stopwords.add("what's");
    stopwords.add("what've");
    stopwords.add("whatever");
    stopwords.add("whatll");
    stopwords.add("whats");
    stopwords.add("whatve");
    stopwords.add("when");
    stopwords.add("when'd");
    stopwords.add("when'll");
    stopwords.add("when's");
    stopwords.add("whence");
    stopwords.add("whenever");
    stopwords.add("where");
    stopwords.add("where'd");
    stopwords.add("where'll");
    stopwords.add("where's");
    stopwords.add("whereafter");
    stopwords.add("whereas");
    stopwords.add("whereby");
    stopwords.add("wherein");
    stopwords.add("wheres");
    stopwords.add("whereupon");
    stopwords.add("wherever");
    stopwords.add("whether");
    stopwords.add("which");
    stopwords.add("whichever");
    stopwords.add("while");
    stopwords.add("whilst");
    stopwords.add("whim");
    stopwords.add("whither");
    stopwords.add("who");
    stopwords.add("who'd");
    stopwords.add("who'll");
    stopwords.add("who's");
    stopwords.add("whod");
    stopwords.add("whoever");
    stopwords.add("whole");
    stopwords.add("wholl");
    stopwords.add("whom");
    stopwords.add("whomever");
    stopwords.add("whos");
    stopwords.add("whose");
    stopwords.add("why");
    stopwords.add("why'd");
    stopwords.add("why'll");
    stopwords.add("why's");
    stopwords.add("widely");
    stopwords.add("width");
    stopwords.add("will");
    stopwords.add("willing");
    stopwords.add("wish");
    stopwords.add("with");
    stopwords.add("within");
    stopwords.add("without");
    stopwords.add("won");
    stopwords.add("won't");
    stopwords.add("wonder");
    stopwords.add("wont");
    stopwords.add("words");
    stopwords.add("work");
    stopwords.add("worked");
    stopwords.add("working");
    stopwords.add("works");
    stopwords.add("world");
    stopwords.add("would");
    stopwords.add("would've");
    stopwords.add("wouldn");
    stopwords.add("wouldn't");
    stopwords.add("wouldnt");
    stopwords.add("ws");
    stopwords.add("www");
    stopwords.add("x");
    stopwords.add("y");
    stopwords.add("ye");
    stopwords.add("year");
    stopwords.add("years");
    stopwords.add("yes");
    stopwords.add("yet");
    stopwords.add("you");
    stopwords.add("you'd");
    stopwords.add("you'll");
    stopwords.add("you're");
    stopwords.add("you've");
    stopwords.add("youd");
    stopwords.add("youll");
    stopwords.add("young");
    stopwords.add("younger");
    stopwords.add("youngest");
    stopwords.add("your");
    stopwords.add("youre");
    stopwords.add("yours");
    stopwords.add("yourself");
    stopwords.add("yourselves");
    stopwords.add("youve");
    stopwords.add("yt");
    stopwords.add("yu");
    stopwords.add("z");
    stopwords.add("za");
    stopwords.add("zero");
    stopwords.add("zm");
    stopwords.add("zr");
  }
}